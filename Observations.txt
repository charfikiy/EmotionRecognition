model_2b: - Training : 90% ; Validation : 57.9% ; Checked Validation Loss Graph : Parabola --> too much overfitting ::: need to add more dropout  (37min for 20 epochs)
    network = conv_2d(network, 32, 3, activation='relu')
    network = conv_2d(network, 32, 5, activation='relu')
    network = max_pool_2d(network, 2, strides=2)
    network = local_response_normalization(network)
    network = conv_2d(network, 64, 3, activation='relu')
    network = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(network, 2, strides=2)
    network = local_response_normalization(network)
    network = conv_2d(network, 128, 3, activation='relu')
    network = conv_2d(network, 128, 5, activation='relu')
    network = max_pool_2d(network, 2, strides=2)
    network = local_response_normalization(network)
    network = fully_connected(network, 1024, activation='relu')
    network = dropout(network, 0.5)
    network = fully_connected(network, 1024, activation='relu')
    network = dropout(network, 0.5)
    network = fully_connected(network, len(EMOTIONS), activation='softmax')

model_2b_d: - Need to Test
    same as model_2b0 below, so test that one instead

model_2b0: - Training : 56% ; Validation : 54% ; Checked Validation Loss Graph : Reducing curve --> proper ::: just need to run more epochs (37min for 20 epochs)
    network = conv_2d(network, 32, 3, activation='relu')
    network = conv_2d(network, 32, 5, activation='relu')
    network = max_pool_2d(network, 2, strides=2)
    network = dropout(network, 0.3)
    network = local_response_normalization(network)
    network = conv_2d(network, 64, 3, activation='relu')
    network = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(network, 2, strides=2)
    network = dropout(network, 0.3)
    network = local_response_normalization(network)
    network = conv_2d(network, 128, 3, activation='relu')
    network = conv_2d(network, 128, 5, activation='relu') 
    network = max_pool_2d(network, 2, strides=2)
    network = dropout(network, 0.3)
    network = local_response_normalization(network)
    network = fully_connected(network, 1024, activation='relu')
    network = dropout(network, 0.7)  # need to change if needed 0.7 -> 0.5
    network = fully_connected(network, 1024, activation='relu')
    network = dropout(network, 0.7)  # need to change if needed 0.7 -> 0.5
    network = fully_connected(network, len(EMOTIONS), activation='softmax')

model_a0: - Training : 93% ; Validation : 56.2% ; Checked Validation Loss Graph : Parabola --> too much overfitting ::: need to add more dropout, also takes lot of time (2hr for 20 epochs)
    network = conv_2d(network, 32, 5, activation='relu')
    network = max_pool_2d(network, 3, strides=2)
    network = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(network, 3, strides=2)
    network = conv_2d(network, 128, 5, activation='relu')
    network = fully_connected(network, 1024, activation='relu')
    network = dropout(network, 0.5)
    network = fully_connected(network, 1024, activation='relu')
    network = dropout(network, 0.5)
    network = fully_connected(network, len(EMOTIONS), activation='softmax')

model_a0_d: - Need to Test
    network = conv_2d(network, 32, 5, activation='relu')
    network = max_pool_2d(network, 2, strides=2)
    network = dropout(network, 0.3)
    network = local_response_normalization(network)
    network = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(network, 2, strides=2)
    network = dropout(network, 0.3)
    network = local_response_normalization(network)
    network = conv_2d(network, 128, 5, activation='relu')
    network = dropout(network, 0.3)
    network = local_response_normalization(network)
    network = fully_connected(network, 1024, activation='relu')
    network = dropout(network, 0.5)
    network = fully_connected(network, 1024, activation='relu')
    network = dropout(network, 0.5)
    network = fully_connected(network, len(EMOTIONS), activation='softmax')

model_a1: - Training : 66% ; Validation : 57% ; Checked Validation Loss Graph : reducing curve --> proper ::: just need to run more epochs, also takes lot of time (6hr for 20 epochs)
    network = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(network, 3, strides=2)
    network = local_response_normalization(network)
    network = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(network, 3, strides=2)
    network = local_response_normalization(network)
    network = conv_2d(network, 128, 5, activation='relu')
    network = dropout(network, 0.3)
    network = fully_connected(network, 1024, activation='relu')
    network = dropout(network, 0.3)
    network = fully_connected(network, len(EMOTIONS), activation='softmax')

model_a2: - estimated 57% validation (logs not clear); Checked Validation Loss Graph : Parabola --> too much overfitting ::: need to add more dropout, also takes lot of time (estimated 1hr for 20 epochs)
    network = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(network, 3, strides=2)
    network = local_response_normalization(network)
    network = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(network, 3, strides=2)
    network = local_response_normalization(network)
    network = conv_2d(network, 128, 4, activation='relu')
    network = dropout(network, 0.5)
    network = fully_connected(network, 3072, activation='relu')
    network = dropout(network, 0.5)
    network = fully_connected(network, len(EMOTIONS), activation='softmax')

model_a2_d: - Need to Test and also too similar to original 'model_a'
    network = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(network, 2, strides=2)
    network = dropout(network, 0.5)
    network = local_response_normalization(network)
    network = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(network, 2, strides=2)
    network = dropout(network, 0.5)
    network = local_response_normalization(network)
    network = conv_2d(network, 128, 4, activation='relu')
    network = dropout(network, 0.5)
    network = fully_connected(network, 3072, activation='relu')
    network = dropout(network, 0.5)
    network = fully_connected(network, len(EMOTIONS), activation='softmax')

model_ab: - Training : 87% ; Validation : 56% ; Checked Validation Loss Graph : Parabola --> too much overfitting ::: need to add more dropout, also takes lot of time (2hr for 20 epochs)
    network = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(network, 3, strides=2)
    network = local_response_normalization(network)
    network = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(network, 3, strides=2)
    network = local_response_normalization(network)
    network = conv_2d(network, 128, 5, activation='relu')
    network = fully_connected(network, 1024, activation='relu')
    network = dropout(network, 0.3)
    network = fully_connected(network, 1024, activation='relu')
    network = dropout(network, 0.3)
    network = fully_connected(network, len(EMOTIONS), activation='softmax')

model_ab_d: - Need to Test
    network = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(network, 2, strides=2)
    network = dropout(network, 0.5)
    network = local_response_normalization(network)
    network = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(network, 2, strides=2)
    network = dropout(network, 0.5)
    network = local_response_normalization(network)
    network = conv_2d(network, 128, 5, activation='relu')
    network = dropout(network, 0.5)
    network = fully_connected(network, 1024, activation='relu')
    network = dropout(network, 0.5)
    network = fully_connected(network, 1024, activation='relu')
    network = dropout(network, 0.5)
    network = fully_connected(network, len(EMOTIONS), activation='softmax')

model_ac: - Training : 58% ; Validation : 54% ; Checked Validation Loss Graph : reducing curve --> proper ::: just need to run more epochs, also takes lot of time (2:30hr for 45 epochs) 
    network = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(network, 3, strides=2)
    network = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(network, 3, strides=2)
    network = dropout(network, 0.5)
    network = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(network, 3, strides=2)
    network = conv_2d(network, 128, 4, activation='relu')
    network = max_pool_2d(network, 3, strides=2)
    network = conv_2d(network, 128, 4, activation='relu')
    network = dropout(network, 0.5)
    network = fully_connected(network, 3072, activation='relu')
    network = fully_connected(network, len(EMOTIONS), activation='softmax')

model_b: - Training : 82% ; Validation : 56% ; Checked Validation Loss Graph : parabola --> too much overfitting ::: need to add more dropout, also takes lot of time (0:45hr for 20 epochs) 
    network = conv_2d(network, 32, 3, activation='relu')
    network = conv_2d(network, 32, 5, activation='relu')
    network = max_pool_2d(network, 3, strides=2)
    network = local_response_normalization(network)
    network = conv_2d(network, 64, 3, activation='relu')
    network = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(network, 3, strides=2)
    network = local_response_normalization(network)
    network = conv_2d(network, 128, 3, activation='relu')
    network = conv_2d(network, 128, 5, activation='relu')
    network = max_pool_2d(network, 3, strides=2)
    network = local_response_normalization(network)
    network = fully_connected(network, 1024, activation='relu')
    network = dropout(network, 0.5)
    network = fully_connected(network, 1024, activation='relu')
    network = dropout(network, 0.5)
    network = fully_connected(network, len(EMOTIONS), activation='softmax')

model_b_d: - Need to Test
    network = conv_2d(network, 32, 3, activation='relu')
    network = conv_2d(network, 32, 5, activation='relu')
    network = max_pool_2d(network, 2, strides=2)
    network = dropout(network, 0.5)
    network = local_response_normalization(network)
    network = conv_2d(network, 64, 3, activation='relu')
    network = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(network, 2, strides=2)
    network = dropout(network, 0.5)
    network = local_response_normalization(network)
    network = conv_2d(network, 128, 3, activation='relu')
    network = conv_2d(network, 128, 5, activation='relu')
    network = dropout(network, 0.5)
    network = max_pool_2d(network, 2, strides=2)
    network = local_response_normalization(network)
    network = fully_connected(network, 1024, activation='relu')
    network = dropout(network, 0.5)
    network = fully_connected(network, 1024, activation='relu')
    network = dropout(network, 0.5)
    network = fully_connected(network, len(EMOTIONS), activation='softmax')

model_b0: - Training : 88% ; Validation : 58% ; Checked Validation Loss Graph : parabola --> too much overfitting ::: need to add more dropout, also takes lot of time (1:45hr for 20 epochs) 
    network = conv_2d(network, 32, 3, activation='relu')
    network = conv_2d(network, 32, 5, activation='relu')
    network = max_pool_2d(network, 3, strides=2)
    network = local_response_normalization(network)
    network = conv_2d(network, 64, 3, activation='relu')
    network = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(network, 3, strides=2)
    network = local_response_normalization(network)
    network = conv_2d(network, 128, 3, activation='relu')
    network = conv_2d(network, 128, 5, activation='relu')
    network = max_pool_2d(network, 3, strides=2)
    network = local_response_normalization(network)
    network = fully_connected(network, 3072, activation='relu')
    network = dropout(network, 0.5)
    network = fully_connected(network, len(EMOTIONS), activation='softmax')

model_b0_d: - Need to Test
    network = conv_2d(network, 32, 3, activation='relu')
    network = conv_2d(network, 32, 5, activation='relu')
    network = max_pool_2d(network, 2, strides=2)
    network = dropout(network, 0.5)
    network = local_response_normalization(network)
    network = conv_2d(network, 64, 3, activation='relu')
    network = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(network, 2, strides=2)
    network = dropout(network, 0.5)
    network = local_response_normalization(network)
    network = conv_2d(network, 128, 3, activation='relu')
    network = conv_2d(network, 128, 5, activation='relu')
    network = max_pool_2d(network, 2, strides=2)
    network = dropout(network, 0.5)
    network = local_response_normalization(network)
    network = fully_connected(network, 3072, activation='relu')
    network = dropout(network, 0.5)
    network = fully_connected(network, len(EMOTIONS), activation='softmax')

model_ba ; model_c ; model_ca ; model_cb ::: Useless Models
 
Modified models : 
model_2b0 ; model_2b_d    [1]: 32, 3:5 ; 64, 3:5 ; 128, 3:5 ; 1024 ; 1024 [model_2b0 : 20 epochs done!!] -- DONE!! NEED TO DO MORE
model_a0_d                [2]: 32, 5 ; 64, 5 ; 128, 5 ; 1024 ; 1024 [2hr] -- TAKING TIME TO REACH proper accuracy!!!
model_a1                  [x]: 64, 5 ; 64, 5 ; 128, 5 ; 1024  [NOT TESTING - TAKES TOO MUCH TIME]
model_a2_d                [6]: 64, 5 ; 64, 5 ; 128, 4 ; 3072  [LAST ONE TO TEST - LOGS NOT CLEAR]
model_ab_d                [5]: 64, 5 ; 64, 5 ; 128, 5 ; 1024 ; 1024 [2hr]
model_ac                  [3]: 64, 5 ; 64, 5 ; 64, 5 ; 128, 4 ; 128, 4 ; 3072 [2:45hr][Can test : 45 epochs already done!!] - MIGHT HAVE REACHED SATURATION!!!
model_b_d [same as 1]     [x]: 32, 3:5 ; 64, 3:5 ; 128, 3:5 ; 1024 ; 1024 
model_b0_d [similar as 1] [4]: 32, 3:5 ; 64, 3:5 ; 128, 3:5 ; 3072 [1:45hr] 



