Final Models :

model_A (model_2b0):
    conv_1 = conv_2d(network, 32, 3, activation='relu')
    conv_2 = conv_2d(conv_1, 32, 5, activation='relu')
    network = max_pool_2d(conv_2, 2, strides=2)
    network = dropout(network, 0.3)
    network = local_response_normalization(network)
    conv_3 = conv_2d(network, 64, 3, activation='relu')
    conv_4 = conv_2d(conv_3, 64, 5, activation='relu')
    network = max_pool_2d(conv_4, 2, strides=2)
    network = dropout(network, 0.3)
    network = local_response_normalization(network)
    conv_5 = conv_2d(network, 128, 3, activation='relu')
    conv_6 = conv_2d(conv_5, 128, 5, activation='relu')
    network = max_pool_2d(conv_6, 2, strides=2)
    network = dropout(network, 0.3)
    network = local_response_normalization(network)
    fc_1 = fully_connected(network, 1024, activation='relu')
    network = dropout(fc_1, 0.7)  # need to change if needed 0.7 -> 0.5
    fc_2 = fully_connected(network, 1024, activation='relu')
    network = dropout(fc_2, 0.7)  # need to change if needed 0.7 -> 0.5
    network = fully_connected(network, len(EMOTIONS), activation='softmax')

model_B (model_a0_d):
    conv_1 = conv_2d(network, 32, 5, activation='relu')
    network = max_pool_2d(conv_1, 2, strides=2)
    network = dropout(network, 0.3)
    network = local_response_normalization(network)
    conv_2 = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(conv_2, 2, strides=2)
    network = dropout(network, 0.3)
    network = local_response_normalization(network)
    conv_3 = conv_2d(network, 128, 5, activation='relu')
    network = dropout(conv_3, 0.3)
    network = local_response_normalization(network)
    fc_1 = fully_connected(network, 1024, activation='relu')
    network = dropout(fc_1, 0.5)
    fc_2 = fully_connected(network, 1024, activation='relu')
    network = dropout(fc_2, 0.5)
    network = fully_connected(network, len(EMOTIONS), activation='softmax')

model_C (model_ab_d):
    conv_1 = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(conv_1, 2, strides=2)
    network = dropout(network, 0.5)
    network = local_response_normalization(network)
    conv_2 = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(conv_2, 2, strides=2)
    network = dropout(network, 0.5)
    network = local_response_normalization(network)
    conv_3 = conv_2d(network, 128, 5, activation='relu')
    network = dropout(conv_3, 0.5)
    fc_1 = fully_connected(network, 1024, activation='relu')
    network = dropout(fc_1, 0.5)
    fc_2 = fully_connected(network, 1024, activation='relu')
    network = dropout(fc_2, 0.5)
    network = fully_connected(network, len(EMOTIONS), activation='softmax')

model_D (model_ac):
    conv_1 = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(conv_1, 3, strides=2)
    conv_2 = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(conv_2, 3, strides=2)
    network = dropout(network, 0.5)
    conv_3 = conv_2d(network, 64, 5, activation='relu')
    network = max_pool_2d(conv_3, 3, strides=2)
    conv_4 = conv_2d(network, 128, 4, activation='relu')
    network = max_pool_2d(conv_4, 3, strides=2)
    conv_5 = conv_2d(network, 128, 4, activation='relu')
    network = dropout(conv_5, 0.5)
    fc_1 = fully_connected(network, 3072, activation='relu')
    network = fully_connected(fc_1, len(EMOTIONS), activation='softmax')

model_resnet :
    conv_1 = conv_2d(network, 64, 5, activation='relu', bias=False)
    # Residual blocks
    res_1 = residual_bottleneck(conv_1, 3, 16, 64)
    res_2 = residual_bottleneck(res_1, 1, 32, 128, downsample=True)
    res_3 = residual_bottleneck(res_2, 2, 32, 128)
    res_4 = residual_bottleneck(res_3, 1, 64, 256, downsample=True)
    res_5 = residual_bottleneck(res_4, 2, 64, 256)
    network = batch_normalization(res_5)
    network = activation(network, 'relu')
    network = global_avg_pool(network)
    # Regression
    fc_1 = fully_connected(network, 3072, activation='relu')
    network = fully_connected(fc_1, len(EMOTIONS), activation='softmax')




